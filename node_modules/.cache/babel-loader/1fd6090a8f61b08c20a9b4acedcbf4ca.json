{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giorg\\\\OneDrive\\\\Desktop\\\\react\\\\form\\\\src\\\\components\\\\AppList.jsx\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Card, Col, Row } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppList = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(null);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(json => {\n      setData(json);\n    }).catch(error => {\n      console.log(\"error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!!!\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: data === null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          checked: !loading,\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: 300,\n            marginTop: 16\n          },\n          loading: loading,\n          children: /*#__PURE__*/_jsxDEV(Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: \"https://joeschmoe.io/api/v1/random\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 41\n            }, this),\n            title: \"Card title\",\n            description: \"This is the description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : data.map(item => /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: item['name'],\n          bordered: false,\n          children: \"Card content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppList, \"a53QwNzDZMJ1pNSt0VSvyKaDe0k=\");\n\n_c = AppList;\nexport default AppList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppList\");","map":{"version":3,"sources":["C:/Users/giorg/OneDrive/Desktop/react/form/src/components/AppList.jsx"],"names":["Avatar","Card","Col","Row","Meta","React","useState","useEffect","AppList","data","setData","error","setError","loading","setLoading","fetch","then","response","ok","json","catch","console","log","finally","onChange","width","marginTop","map","item"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,MAAvC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,YAAMF,QAAN;AACH,KANL,EAOKD,IAPL,CAOUG,IAAI,IAAI;AACVT,MAAAA,OAAO,CAACS,IAAD,CAAP;AACH,KATL,EAUKC,KAVL,CAUWT,KAAK,IAAI;AACZU,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCX,KAArC;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAbL,EAcKY,OAdL,CAca,MAAM;AACXT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAhBL;AAiBH,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,MAAID,OAAJ,EAAa,OAAO,YAAP;AAEb,MAAIF,KAAJ,EAAW,OAAO,UAAP;AAEX,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA,gBAEQF,IAAI,KAAK,IAAT,gBACA;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,CAACI,OAAlB;AAA2B,UAAA,QAAQ,EAAE,KAAKW;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,GAAT;AAAcC,YAAAA,SAAS,EAAE;AAAzB,WAAb;AAA4C,UAAA,OAAO,EAAEb,OAArD;AAAA,iCACI,QAAC,IAAD;AACI,YAAA,MAAM,eAAE,QAAC,MAAD;AAAQ,cAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,KAAK,EAAC,YAFV;AAGI,YAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADA,GAYAJ,IAAI,CAACkB,GAAL,CAASC,IAAI,iBACT,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEA,IAAI,CAAC,MAAD,CAAjB;AAA2B,UAAA,QAAQ,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAdR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAzDD;;GAAMpB,O;;KAAAA,O;AA2DN,eAAeA,OAAf","sourcesContent":["import { Avatar, Card, Col, Row } from 'antd'\r\nimport Meta from 'antd/lib/card/Meta';\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\n\r\nconst AppList = () => {\r\n\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {\r\n                if(response.ok){\r\n                    return response.json()\r\n                }\r\n                throw response;\r\n            })\r\n            .then(json => {\r\n                setData(json)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error fetching data: \", error);\r\n                setError(error)\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }, []);\r\n\r\n    if (loading) return \"Loading...\";\r\n\r\n    if (error) return \"Error!!!\";\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Row gutter={[16, 16]}>\r\n                {\r\n                    data === null ? \r\n                    <>\r\n                        <Switch checked={!loading} onChange={this.onChange} />\r\n                        <Card style={{ width: 300, marginTop: 16 }} loading={loading}>\r\n                            <Meta\r\n                                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\r\n                                title=\"Card title\"\r\n                                description=\"This is the description\"\r\n                            />\r\n                        </Card> \r\n                    </>\r\n                    : \r\n                    data.map(item => (\r\n                        <Col span={8}>\r\n                            <Card title={item['name']} bordered={false}>\r\n                                Card content\r\n                            </Card>\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppList\r\n"]},"metadata":{},"sourceType":"module"}